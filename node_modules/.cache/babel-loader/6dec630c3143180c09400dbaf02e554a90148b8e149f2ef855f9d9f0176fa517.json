{"ast":null,"code":"// src/components/LinkedInConnect.js\nimport React,{useEffect}from'react';import{jsx as _jsx}from\"react/jsx-runtime\";const LinkedInConnect=_ref=>{let{appUser,onConnected,connected}=_ref;// Listen for popup messages\nuseEffect(()=>{const handleMessage=event=>{if(event.data.type==='linkedin_callback'){if(event.data.success){alert(\"LinkedIn connected successfully! \".concat(event.data.posting_method||'Personal Profile'));onConnected();// Refresh status\n// Redirect to content page after successful connection\nsetTimeout(()=>{console.log('Redirecting to content page...');window.location.href='/content';},2000);}else{alert(\"LinkedIn connection failed: \".concat(event.data.error));}}};window.addEventListener('message',handleMessage);return()=>window.removeEventListener('message',handleMessage);},[onConnected]);const handleConnect=()=>{const clientId='86geycovoa141y';// Your LinkedIn Client ID\nconst redirectUri=encodeURIComponent('http://13.233.45.167:5000/social/linkedin/callback');// Using your actual available scopes\nconst scope=encodeURIComponent('r_basicprofile w_member_social w_organization_social r_organization_social rw_organization_admin');const state=encodeURIComponent(appUser);// Pass appUser for backend verification\nconst url=\"https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=\".concat(clientId,\"&redirect_uri=\").concat(redirectUri,\"&state=\").concat(state,\"&scope=\").concat(scope);// Open in popup window\nconst popup=window.open(url,'linkedin-auth','width=600,height=600,scrollbars=yes,resizable=yes');// Check if popup was blocked\nif(!popup){alert('Popup blocked. Please allow popups for this site and try again.');return;}// Monitor popup\nconst checkClosed=setInterval(()=>{if(popup.closed){clearInterval(checkClosed);// Give some time for message to be processed\nsetTimeout(()=>{onConnected();// Refresh status when popup closes\n},1000);}},1000);};const handleDisconnect=async()=>{try{const token=localStorage.getItem('token');if(!token){alert('Please login again to disconnect LinkedIn.');window.location.href='/login';return;}const response=await fetch('http://13.233.45.167:5000/social/linkedin/disconnect',{method:'POST',headers:{'Authorization':\"Bearer \".concat(token),'Content-Type':'application/json'},body:JSON.stringify({app_user:appUser})});if(response.status===401){const errorData=await response.json();if(errorData.token_expired){localStorage.removeItem('token');alert('Your session has expired. Please login again.');window.location.href='/login';return;}}if(response.ok){onConnected();// Refresh status\nalert('LinkedIn disconnected successfully!');}else{const error=await response.json();alert(\"Failed to disconnect: \".concat(error.error||error.message||'Unknown error'));}}catch(error){console.error('Error disconnecting LinkedIn:',error);alert('Error disconnecting LinkedIn. Please try again.');}};return/*#__PURE__*/_jsx(\"button\",{className:\"connect-button\",onClick:connected?handleDisconnect:handleConnect,style:{backgroundColor:connected?'#dc3545':'#0077b5',color:'white',border:'none',padding:'8px 16px',borderRadius:'4px',cursor:'pointer',fontSize:'14px'},children:connected?'Disconnect LinkedIn':'Connect LinkedIn'});};export default LinkedInConnect;","map":{"version":3,"names":["React","useEffect","jsx","_jsx","LinkedInConnect","_ref","appUser","onConnected","connected","handleMessage","event","data","type","success","alert","concat","posting_method","setTimeout","console","log","window","location","href","error","addEventListener","removeEventListener","handleConnect","clientId","redirectUri","encodeURIComponent","scope","state","url","popup","open","checkClosed","setInterval","closed","clearInterval","handleDisconnect","token","localStorage","getItem","response","fetch","method","headers","body","JSON","stringify","app_user","status","errorData","json","token_expired","removeItem","ok","message","className","onClick","style","backgroundColor","color","border","padding","borderRadius","cursor","fontSize","children"],"sources":["C:/Users/Vibek Rana/Pictures/frontend-main/src/components/LinkedInConnect.js"],"sourcesContent":["// src/components/LinkedInConnect.js\r\nimport React, { useEffect } from 'react';\r\n\r\nconst LinkedInConnect = ({ appUser, onConnected, connected }) => {\r\n  \r\n  // Listen for popup messages\r\n  useEffect(() => {\r\n    const handleMessage = (event) => {\r\n      if (event.data.type === 'linkedin_callback') {\r\n        if (event.data.success) {\r\n          alert(`LinkedIn connected successfully! ${event.data.posting_method || 'Personal Profile'}`);\r\n          onConnected(); // Refresh status\r\n          \r\n          // Redirect to content page after successful connection\r\n          setTimeout(() => {\r\n            console.log('Redirecting to content page...');\r\n            window.location.href = '/content';\r\n          }, 2000);\r\n          \r\n        } else {\r\n          alert(`LinkedIn connection failed: ${event.data.error}`);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('message', handleMessage);\r\n    return () => window.removeEventListener('message', handleMessage);\r\n  }, [onConnected]);\r\n\r\n  const handleConnect = () => {\r\n    const clientId = '86geycovoa141y'; // Your LinkedIn Client ID\r\n    const redirectUri = encodeURIComponent('http://13.233.45.167:5000/social/linkedin/callback');\r\n    \r\n    // Using your actual available scopes\r\n    const scope = encodeURIComponent('r_basicprofile w_member_social w_organization_social r_organization_social rw_organization_admin');\r\n    const state = encodeURIComponent(appUser); // Pass appUser for backend verification\r\n    \r\n    const url = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}&state=${state}&scope=${scope}`;\r\n    \r\n    // Open in popup window\r\n    const popup = window.open(url, 'linkedin-auth', 'width=600,height=600,scrollbars=yes,resizable=yes');\r\n    \r\n    // Check if popup was blocked\r\n    if (!popup) {\r\n      alert('Popup blocked. Please allow popups for this site and try again.');\r\n      return;\r\n    }\r\n    \r\n    // Monitor popup\r\n    const checkClosed = setInterval(() => {\r\n      if (popup.closed) {\r\n        clearInterval(checkClosed);\r\n        // Give some time for message to be processed\r\n        setTimeout(() => {\r\n          onConnected(); // Refresh status when popup closes\r\n        }, 1000);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  const handleDisconnect = async () => {\r\n    try {\r\n      const token = localStorage.getItem('token');\r\n      if (!token) {\r\n        alert('Please login again to disconnect LinkedIn.');\r\n        window.location.href = '/login';\r\n        return;\r\n      }\r\n\r\n      const response = await fetch('http://13.233.45.167:5000/social/linkedin/disconnect', {\r\n        method: 'POST',\r\n        headers: { \r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ app_user: appUser })\r\n      });\r\n      \r\n      if (response.status === 401) {\r\n        const errorData = await response.json();\r\n        if (errorData.token_expired) {\r\n          localStorage.removeItem('token');\r\n          alert('Your session has expired. Please login again.');\r\n          window.location.href = '/login';\r\n          return;\r\n        }\r\n      }\r\n      \r\n      if (response.ok) {\r\n        onConnected(); // Refresh status\r\n        alert('LinkedIn disconnected successfully!');\r\n      } else {\r\n        const error = await response.json();\r\n        alert(`Failed to disconnect: ${error.error || error.message || 'Unknown error'}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error disconnecting LinkedIn:', error);\r\n      alert('Error disconnecting LinkedIn. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button \r\n      className=\"connect-button\" \r\n      onClick={connected ? handleDisconnect : handleConnect}\r\n      style={{\r\n        backgroundColor: connected ? '#dc3545' : '#0077b5',\r\n        color: 'white',\r\n        border: 'none',\r\n        padding: '8px 16px',\r\n        borderRadius: '4px',\r\n        cursor: 'pointer',\r\n        fontSize: '14px'\r\n      }}\r\n    >\r\n      {connected ? 'Disconnect LinkedIn' : 'Connect LinkedIn'}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LinkedInConnect;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}