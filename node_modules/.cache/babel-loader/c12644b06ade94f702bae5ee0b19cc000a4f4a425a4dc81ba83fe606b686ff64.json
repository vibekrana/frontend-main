{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vibek Rana\\\\Pictures\\\\frontend-main\\\\src\\\\components\\\\LinkedInConnect.js\";\n// src/components/LinkedInConnect.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LinkedInConnect = ({\n  appUser,\n  onConnected,\n  connected\n}) => {\n  const handleConnect = () => {\n    // TODO: Implement actual OAuth redirect to LinkedIn\n    // Example placeholder:\n    const clientId = 'YOUR_LINKEDIN_CLIENT_ID'; // Replace with actual client ID from LinkedIn app\n    const redirectUri = encodeURIComponent('http://localhost:3000/linkedin-callback'); // Your callback URL\n    const scope = encodeURIComponent('profile openid email w_member_social'); // Adjust scopes as needed\n    const state = encodeURIComponent(appUser || 'random_state'); // Use appUser or generate random state for security\n    const url = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}&state=${state}&scope=${scope}`;\n\n    // Redirect to LinkedIn auth page\n    window.location.href = url;\n\n    // After callback (handled in backend later), call onConnected() to refresh status\n  };\n  const handleDisconnect = () => {\n    // TODO: Implement disconnect logic, e.g., call backend API to revoke token\n    alert('Disconnecting LinkedIn (placeholder)');\n    onConnected(); // Refresh status after disconnect\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"connect-button\",\n    onClick: connected ? handleDisconnect : handleConnect,\n    children: [connected ? 'Disconnect' : 'Connect', \" LinkedIn\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = LinkedInConnect;\nexport default LinkedInConnect;\nvar _c;\n$RefreshReg$(_c, \"LinkedInConnect\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","LinkedInConnect","appUser","onConnected","connected","handleConnect","clientId","redirectUri","encodeURIComponent","scope","state","url","window","location","href","handleDisconnect","alert","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Vibek Rana/Pictures/frontend-main/src/components/LinkedInConnect.js"],"sourcesContent":["// src/components/LinkedInConnect.js\r\nimport React from 'react';\r\n\r\nconst LinkedInConnect = ({ appUser, onConnected, connected }) => {\r\n  const handleConnect = () => {\r\n    // TODO: Implement actual OAuth redirect to LinkedIn\r\n    // Example placeholder:\r\n    const clientId = 'YOUR_LINKEDIN_CLIENT_ID'; // Replace with actual client ID from LinkedIn app\r\n    const redirectUri = encodeURIComponent('http://localhost:3000/linkedin-callback'); // Your callback URL\r\n    const scope = encodeURIComponent('profile openid email w_member_social'); // Adjust scopes as needed\r\n    const state = encodeURIComponent(appUser || 'random_state'); // Use appUser or generate random state for security\r\n    const url = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}&state=${state}&scope=${scope}`;\r\n    \r\n    // Redirect to LinkedIn auth page\r\n    window.location.href = url;\r\n\r\n    // After callback (handled in backend later), call onConnected() to refresh status\r\n  };\r\n\r\n  const handleDisconnect = () => {\r\n    // TODO: Implement disconnect logic, e.g., call backend API to revoke token\r\n    alert('Disconnecting LinkedIn (placeholder)');\r\n    onConnected(); // Refresh status after disconnect\r\n  };\r\n\r\n  return (\r\n    <button \r\n      className=\"connect-button\" \r\n      onClick={connected ? handleDisconnect : handleConnect}\r\n    >\r\n      {connected ? 'Disconnect' : 'Connect'} LinkedIn\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LinkedInConnect;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAC;EAAEC,OAAO;EAAEC,WAAW;EAAEC;AAAU,CAAC,KAAK;EAC/D,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA;IACA,MAAMC,QAAQ,GAAG,yBAAyB,CAAC,CAAC;IAC5C,MAAMC,WAAW,GAAGC,kBAAkB,CAAC,yCAAyC,CAAC,CAAC,CAAC;IACnF,MAAMC,KAAK,GAAGD,kBAAkB,CAAC,sCAAsC,CAAC,CAAC,CAAC;IAC1E,MAAME,KAAK,GAAGF,kBAAkB,CAACN,OAAO,IAAI,cAAc,CAAC,CAAC,CAAC;IAC7D,MAAMS,GAAG,GAAG,gFAAgFL,QAAQ,iBAAiBC,WAAW,UAAUG,KAAK,UAAUD,KAAK,EAAE;;IAEhK;IACAG,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGH,GAAG;;IAE1B;EACF,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACAC,KAAK,CAAC,sCAAsC,CAAC;IAC7Cb,WAAW,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,oBACEH,OAAA;IACEiB,SAAS,EAAC,gBAAgB;IAC1BC,OAAO,EAAEd,SAAS,GAAGW,gBAAgB,GAAGV,aAAc;IAAAc,QAAA,GAErDf,SAAS,GAAG,YAAY,GAAG,SAAS,EAAC,WACxC;EAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACC,EAAA,GA9BIvB,eAAe;AAgCrB,eAAeA,eAAe;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}