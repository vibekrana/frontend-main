{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vibek Rana\\\\Pictures\\\\frontend-main\\\\src\\\\components\\\\InstagramConnect.js\",\n  _s = $RefreshSig$();\n// Update your InstagramConnect.js with your real App ID\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InstagramConnect = ({\n  appUser,\n  onConnected,\n  connected,\n  status\n}) => {\n  _s();\n  const [isConnecting, setIsConnecting] = useState(false);\n  const handleConnect = () => {\n    setIsConnecting(true);\n\n    // Your actual Facebook App ID\n    const clientId = '1095157869184608'; // Your real App ID\n    const redirectUri = encodeURIComponent('https://13.233.45.167:5000/social/instagram/callback');\n    const scope = encodeURIComponent('instagram_business_basic,instagram_manage_comments,instagram_business_manage_messages,pages_show_list,pages_read_engagement');\n    const state = encodeURIComponent(appUser || 'random_state');\n    const url = `https://www.facebook.com/v20.0/dialog/oauth?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scope}&response_type=code&state=${state}`;\n\n    // Open popup for Instagram OAuth\n    const popup = window.open(url, 'instagram_oauth', 'width=600,height=600,scrollbars=yes,resizable=yes');\n\n    // Listen for the OAuth callback\n    const handleMessage = event => {\n      if (event.data.type === 'instagram_callback') {\n        setIsConnecting(false);\n        popup.close();\n        if (event.data.success) {\n          console.log('✅ Instagram connected:', event.data);\n          alert(`Instagram connected successfully! @${event.data.username} (${event.data.account_type})`);\n          onConnected(); // Refresh status\n        } else {\n          console.error('❌ Instagram connection failed:', event.data.error);\n          alert(`Instagram connection failed: ${event.data.error}`);\n        }\n        window.removeEventListener('message', handleMessage);\n      }\n    };\n    window.addEventListener('message', handleMessage);\n\n    // Handle popup close without callback\n    const checkClosed = setInterval(() => {\n      if (popup.closed) {\n        setIsConnecting(false);\n        window.removeEventListener('message', handleMessage);\n        clearInterval(checkClosed);\n      }\n    }, 1000);\n  };\n  const handleDisconnect = async () => {\n    try {\n      const response = await fetch('/social/instagram/disconnect', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`\n        },\n        body: JSON.stringify({\n          app_user: appUser\n        })\n      });\n      const result = await response.json();\n      if (result.success) {\n        alert('Instagram disconnected successfully!');\n        onConnected(); // Refresh status\n      } else {\n        alert(`Failed to disconnect Instagram: ${result.error}`);\n      }\n    } catch (error) {\n      console.error('Error disconnecting Instagram:', error);\n      alert('Error disconnecting Instagram. Please try again.');\n    }\n  };\n  const getButtonText = () => {\n    var _status$detail;\n    if (isConnecting) return 'Connecting...';\n    if (connected && status !== null && status !== void 0 && (_status$detail = status.detail) !== null && _status$detail !== void 0 && _status$detail.username) {\n      return `Disconnect @${status.detail.username}`;\n    }\n    return connected ? 'Disconnect Instagram' : 'Connect Instagram';\n  };\n  const getStatusText = () => {\n    if (!connected) return null;\n    const detail = status === null || status === void 0 ? void 0 : status.detail;\n    if (!detail) return 'Connected';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        fontSize: '12px',\n        color: '#666',\n        marginTop: '4px'\n      },\n      children: [\"@\", detail.username, \" (\", detail.account_type, \")\", detail.page_name && ` via ${detail.page_name}`]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `connect-button ${connected ? 'connected' : 'disconnected'}`,\n      onClick: connected ? handleDisconnect : handleConnect,\n      disabled: isConnecting,\n      style: {\n        backgroundColor: connected ? '#dc3545' : '#28a745',\n        color: 'white',\n        border: 'none',\n        padding: '10px 20px',\n        borderRadius: '5px',\n        cursor: isConnecting ? 'not-allowed' : 'pointer',\n        opacity: isConnecting ? 0.6 : 1\n      },\n      children: getButtonText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), getStatusText()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n_s(InstagramConnect, \"wFTzW8g/nX5ciJ7yP5KH8paCcIk=\");\n_c = InstagramConnect;\nexport default InstagramConnect;\nvar _c;\n$RefreshReg$(_c, \"InstagramConnect\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","InstagramConnect","appUser","onConnected","connected","status","_s","isConnecting","setIsConnecting","handleConnect","clientId","redirectUri","encodeURIComponent","scope","state","url","popup","window","open","handleMessage","event","data","type","close","success","console","log","alert","username","account_type","error","removeEventListener","addEventListener","checkClosed","setInterval","closed","clearInterval","handleDisconnect","response","fetch","method","headers","localStorage","getItem","body","JSON","stringify","app_user","result","json","getButtonText","_status$detail","detail","getStatusText","style","fontSize","color","marginTop","children","page_name","fileName","_jsxFileName","lineNumber","columnNumber","className","onClick","disabled","backgroundColor","border","padding","borderRadius","cursor","opacity","_c","$RefreshReg$"],"sources":["C:/Users/Vibek Rana/Pictures/frontend-main/src/components/InstagramConnect.js"],"sourcesContent":["// Update your InstagramConnect.js with your real App ID\r\nimport React, { useState } from 'react';\r\n\r\nconst InstagramConnect = ({ appUser, onConnected, connected, status }) => {\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n\r\n  const handleConnect = () => {\r\n    setIsConnecting(true);\r\n    \r\n    // Your actual Facebook App ID\r\n    const clientId = '1095157869184608'; // Your real App ID\r\n    const redirectUri = encodeURIComponent('https://13.233.45.167:5000/social/instagram/callback');\r\n    const scope = encodeURIComponent('instagram_business_basic,instagram_manage_comments,instagram_business_manage_messages,pages_show_list,pages_read_engagement');\r\n    const state = encodeURIComponent(appUser || 'random_state');\r\n    \r\n    const url = `https://www.facebook.com/v20.0/dialog/oauth?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scope}&response_type=code&state=${state}`;\r\n    \r\n    // Open popup for Instagram OAuth\r\n    const popup = window.open(\r\n      url,\r\n      'instagram_oauth',\r\n      'width=600,height=600,scrollbars=yes,resizable=yes'\r\n    );\r\n\r\n    // Listen for the OAuth callback\r\n    const handleMessage = (event) => {\r\n      if (event.data.type === 'instagram_callback') {\r\n        setIsConnecting(false);\r\n        popup.close();\r\n        \r\n        if (event.data.success) {\r\n          console.log('✅ Instagram connected:', event.data);\r\n          alert(`Instagram connected successfully! @${event.data.username} (${event.data.account_type})`);\r\n          onConnected(); // Refresh status\r\n        } else {\r\n          console.error('❌ Instagram connection failed:', event.data.error);\r\n          alert(`Instagram connection failed: ${event.data.error}`);\r\n        }\r\n        \r\n        window.removeEventListener('message', handleMessage);\r\n      }\r\n    };\r\n\r\n    window.addEventListener('message', handleMessage);\r\n\r\n    // Handle popup close without callback\r\n    const checkClosed = setInterval(() => {\r\n      if (popup.closed) {\r\n        setIsConnecting(false);\r\n        window.removeEventListener('message', handleMessage);\r\n        clearInterval(checkClosed);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  const handleDisconnect = async () => {\r\n    try {\r\n      const response = await fetch('/social/instagram/disconnect', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': `Bearer ${localStorage.getItem('authToken')}`\r\n        },\r\n        body: JSON.stringify({\r\n          app_user: appUser\r\n        })\r\n      });\r\n\r\n      const result = await response.json();\r\n      \r\n      if (result.success) {\r\n        alert('Instagram disconnected successfully!');\r\n        onConnected(); // Refresh status\r\n      } else {\r\n        alert(`Failed to disconnect Instagram: ${result.error}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error disconnecting Instagram:', error);\r\n      alert('Error disconnecting Instagram. Please try again.');\r\n    }\r\n  };\r\n\r\n  const getButtonText = () => {\r\n    if (isConnecting) return 'Connecting...';\r\n    if (connected && status?.detail?.username) {\r\n      return `Disconnect @${status.detail.username}`;\r\n    }\r\n    return connected ? 'Disconnect Instagram' : 'Connect Instagram';\r\n  };\r\n\r\n  const getStatusText = () => {\r\n    if (!connected) return null;\r\n    \r\n    const detail = status?.detail;\r\n    if (!detail) return 'Connected';\r\n    \r\n    return (\r\n      <div style={{ fontSize: '12px', color: '#666', marginTop: '4px' }}>\r\n        @{detail.username} ({detail.account_type})\r\n        {detail.page_name && ` via ${detail.page_name}`}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button \r\n        className={`connect-button ${connected ? 'connected' : 'disconnected'}`}\r\n        onClick={connected ? handleDisconnect : handleConnect}\r\n        disabled={isConnecting}\r\n        style={{\r\n          backgroundColor: connected ? '#dc3545' : '#28a745',\r\n          color: 'white',\r\n          border: 'none',\r\n          padding: '10px 20px',\r\n          borderRadius: '5px',\r\n          cursor: isConnecting ? 'not-allowed' : 'pointer',\r\n          opacity: isConnecting ? 0.6 : 1\r\n        }}\r\n      >\r\n        {getButtonText()}\r\n      </button>\r\n      {getStatusText()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InstagramConnect;"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,OAAO;EAAEC,WAAW;EAAEC,SAAS;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACxE,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAEvD,MAAMW,aAAa,GAAGA,CAAA,KAAM;IAC1BD,eAAe,CAAC,IAAI,CAAC;;IAErB;IACA,MAAME,QAAQ,GAAG,kBAAkB,CAAC,CAAC;IACrC,MAAMC,WAAW,GAAGC,kBAAkB,CAAC,sDAAsD,CAAC;IAC9F,MAAMC,KAAK,GAAGD,kBAAkB,CAAC,6HAA6H,CAAC;IAC/J,MAAME,KAAK,GAAGF,kBAAkB,CAACV,OAAO,IAAI,cAAc,CAAC;IAE3D,MAAMa,GAAG,GAAG,yDAAyDL,QAAQ,iBAAiBC,WAAW,UAAUE,KAAK,6BAA6BC,KAAK,EAAE;;IAE5J;IACA,MAAME,KAAK,GAAGC,MAAM,CAACC,IAAI,CACvBH,GAAG,EACH,iBAAiB,EACjB,mDACF,CAAC;;IAED;IACA,MAAMI,aAAa,GAAIC,KAAK,IAAK;MAC/B,IAAIA,KAAK,CAACC,IAAI,CAACC,IAAI,KAAK,oBAAoB,EAAE;QAC5Cd,eAAe,CAAC,KAAK,CAAC;QACtBQ,KAAK,CAACO,KAAK,CAAC,CAAC;QAEb,IAAIH,KAAK,CAACC,IAAI,CAACG,OAAO,EAAE;UACtBC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEN,KAAK,CAACC,IAAI,CAAC;UACjDM,KAAK,CAAC,sCAAsCP,KAAK,CAACC,IAAI,CAACO,QAAQ,KAAKR,KAAK,CAACC,IAAI,CAACQ,YAAY,GAAG,CAAC;UAC/F1B,WAAW,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,MAAM;UACLsB,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAEV,KAAK,CAACC,IAAI,CAACS,KAAK,CAAC;UACjEH,KAAK,CAAC,gCAAgCP,KAAK,CAACC,IAAI,CAACS,KAAK,EAAE,CAAC;QAC3D;QAEAb,MAAM,CAACc,mBAAmB,CAAC,SAAS,EAAEZ,aAAa,CAAC;MACtD;IACF,CAAC;IAEDF,MAAM,CAACe,gBAAgB,CAAC,SAAS,EAAEb,aAAa,CAAC;;IAEjD;IACA,MAAMc,WAAW,GAAGC,WAAW,CAAC,MAAM;MACpC,IAAIlB,KAAK,CAACmB,MAAM,EAAE;QAChB3B,eAAe,CAAC,KAAK,CAAC;QACtBS,MAAM,CAACc,mBAAmB,CAAC,SAAS,EAAEZ,aAAa,CAAC;QACpDiB,aAAa,CAACH,WAAW,CAAC;MAC5B;IACF,CAAC,EAAE,IAAI,CAAC;EACV,CAAC;EAED,MAAMI,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QAC9D,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACnBC,QAAQ,EAAE7C;QACZ,CAAC;MACH,CAAC,CAAC;MAEF,MAAM8C,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MAEpC,IAAID,MAAM,CAACxB,OAAO,EAAE;QAClBG,KAAK,CAAC,sCAAsC,CAAC;QAC7CxB,WAAW,CAAC,CAAC,CAAC,CAAC;MACjB,CAAC,MAAM;QACLwB,KAAK,CAAC,mCAAmCqB,MAAM,CAAClB,KAAK,EAAE,CAAC;MAC1D;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdL,OAAO,CAACK,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtDH,KAAK,CAAC,kDAAkD,CAAC;IAC3D;EACF,CAAC;EAED,MAAMuB,aAAa,GAAGA,CAAA,KAAM;IAAA,IAAAC,cAAA;IAC1B,IAAI5C,YAAY,EAAE,OAAO,eAAe;IACxC,IAAIH,SAAS,IAAIC,MAAM,aAANA,MAAM,gBAAA8C,cAAA,GAAN9C,MAAM,CAAE+C,MAAM,cAAAD,cAAA,eAAdA,cAAA,CAAgBvB,QAAQ,EAAE;MACzC,OAAO,eAAevB,MAAM,CAAC+C,MAAM,CAACxB,QAAQ,EAAE;IAChD;IACA,OAAOxB,SAAS,GAAG,sBAAsB,GAAG,mBAAmB;EACjE,CAAC;EAED,MAAMiD,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACjD,SAAS,EAAE,OAAO,IAAI;IAE3B,MAAMgD,MAAM,GAAG/C,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAE+C,MAAM;IAC7B,IAAI,CAACA,MAAM,EAAE,OAAO,WAAW;IAE/B,oBACEpD,OAAA;MAAKsD,KAAK,EAAE;QAAEC,QAAQ,EAAE,MAAM;QAAEC,KAAK,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAM,CAAE;MAAAC,QAAA,GAAC,GAChE,EAACN,MAAM,CAACxB,QAAQ,EAAC,IAAE,EAACwB,MAAM,CAACvB,YAAY,EAAC,GACzC,EAACuB,MAAM,CAACO,SAAS,IAAI,QAAQP,MAAM,CAACO,SAAS,EAAE;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CAAC;EAEV,CAAC;EAED,oBACE/D,OAAA;IAAA0D,QAAA,gBACE1D,OAAA;MACEgE,SAAS,EAAE,kBAAkB5D,SAAS,GAAG,WAAW,GAAG,cAAc,EAAG;MACxE6D,OAAO,EAAE7D,SAAS,GAAGiC,gBAAgB,GAAG5B,aAAc;MACtDyD,QAAQ,EAAE3D,YAAa;MACvB+C,KAAK,EAAE;QACLa,eAAe,EAAE/D,SAAS,GAAG,SAAS,GAAG,SAAS;QAClDoD,KAAK,EAAE,OAAO;QACdY,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE,WAAW;QACpBC,YAAY,EAAE,KAAK;QACnBC,MAAM,EAAEhE,YAAY,GAAG,aAAa,GAAG,SAAS;QAChDiE,OAAO,EAAEjE,YAAY,GAAG,GAAG,GAAG;MAChC,CAAE;MAAAmD,QAAA,EAEDR,aAAa,CAAC;IAAC;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,EACRV,aAAa,CAAC,CAAC;EAAA;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACb,CAAC;AAEV,CAAC;AAACzD,EAAA,CA1HIL,gBAAgB;AAAAwE,EAAA,GAAhBxE,gBAAgB;AA4HtB,eAAeA,gBAAgB;AAAC,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}