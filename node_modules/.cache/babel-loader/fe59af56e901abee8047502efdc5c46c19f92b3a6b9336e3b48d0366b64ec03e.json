{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Vibek Rana\\\\Pictures\\\\frontend-main\\\\src\\\\components\\\\InstagramConnect.js\";\n// src/components/InstagramConnect.js\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InstagramConnect = ({\n  appUser,\n  onConnected,\n  connected\n}) => {\n  const handleConnect = () => {\n    // TODO: Implement actual OAuth redirect to Instagram (via Facebook Graph API)\n    // Example placeholder:\n    const clientId = 'YOUR_FACEBOOK_APP_ID'; // Replace with actual Facebook App ID (for Instagram)\n    const redirectUri = encodeURIComponent('http://localhost:3000/instagram-callback'); // Your callback URL\n    const scope = encodeURIComponent('pages_show_list instagram_basic instagram_manage_comments'); // Adjust scopes for Instagram Business/Creator\n    const state = encodeURIComponent(appUser || 'random_state'); // Use appUser or generate random state for security\n    const url = `https://www.facebook.com/v20.0/dialog/oauth?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scope}&response_type=code&state=${state}`;\n\n    // Redirect to Facebook/Instagram auth page\n    window.location.href = url;\n\n    // After callback (handled in backend later), call onConnected() to refresh status\n  };\n  const handleDisconnect = () => {\n    // TODO: Implement disconnect logic, e.g., call backend API to revoke token\n    alert('Disconnecting Instagram (placeholder)');\n    onConnected(); // Refresh status after disconnect\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"connect-button\",\n    onClick: connected ? handleDisconnect : handleConnect,\n    children: [connected ? 'Disconnect' : 'Connect', \" Instagram\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c = InstagramConnect;\nexport default InstagramConnect;\nvar _c;\n$RefreshReg$(_c, \"InstagramConnect\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","InstagramConnect","appUser","onConnected","connected","handleConnect","clientId","redirectUri","encodeURIComponent","scope","state","url","window","location","href","handleDisconnect","alert","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Vibek Rana/Pictures/frontend-main/src/components/InstagramConnect.js"],"sourcesContent":["// src/components/InstagramConnect.js\r\nimport React from 'react';\r\n\r\nconst InstagramConnect = ({ appUser, onConnected, connected }) => {\r\n  const handleConnect = () => {\r\n    // TODO: Implement actual OAuth redirect to Instagram (via Facebook Graph API)\r\n    // Example placeholder:\r\n    const clientId = 'YOUR_FACEBOOK_APP_ID'; // Replace with actual Facebook App ID (for Instagram)\r\n    const redirectUri = encodeURIComponent('http://localhost:3000/instagram-callback'); // Your callback URL\r\n    const scope = encodeURIComponent('pages_show_list instagram_basic instagram_manage_comments'); // Adjust scopes for Instagram Business/Creator\r\n    const state = encodeURIComponent(appUser || 'random_state'); // Use appUser or generate random state for security\r\n    const url = `https://www.facebook.com/v20.0/dialog/oauth?client_id=${clientId}&redirect_uri=${redirectUri}&scope=${scope}&response_type=code&state=${state}`;\r\n    \r\n    // Redirect to Facebook/Instagram auth page\r\n    window.location.href = url;\r\n\r\n    // After callback (handled in backend later), call onConnected() to refresh status\r\n  };\r\n\r\n  const handleDisconnect = () => {\r\n    // TODO: Implement disconnect logic, e.g., call backend API to revoke token\r\n    alert('Disconnecting Instagram (placeholder)');\r\n    onConnected(); // Refresh status after disconnect\r\n  };\r\n\r\n  return (\r\n    <button \r\n      className=\"connect-button\" \r\n      onClick={connected ? handleDisconnect : handleConnect}\r\n    >\r\n      {connected ? 'Disconnect' : 'Connect'} Instagram\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default InstagramConnect;"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,OAAO;EAAEC,WAAW;EAAEC;AAAU,CAAC,KAAK;EAChE,MAAMC,aAAa,GAAGA,CAAA,KAAM;IAC1B;IACA;IACA,MAAMC,QAAQ,GAAG,sBAAsB,CAAC,CAAC;IACzC,MAAMC,WAAW,GAAGC,kBAAkB,CAAC,0CAA0C,CAAC,CAAC,CAAC;IACpF,MAAMC,KAAK,GAAGD,kBAAkB,CAAC,2DAA2D,CAAC,CAAC,CAAC;IAC/F,MAAME,KAAK,GAAGF,kBAAkB,CAACN,OAAO,IAAI,cAAc,CAAC,CAAC,CAAC;IAC7D,MAAMS,GAAG,GAAG,yDAAyDL,QAAQ,iBAAiBC,WAAW,UAAUE,KAAK,6BAA6BC,KAAK,EAAE;;IAE5J;IACAE,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGH,GAAG;;IAE1B;EACF,CAAC;EAED,MAAMI,gBAAgB,GAAGA,CAAA,KAAM;IAC7B;IACAC,KAAK,CAAC,uCAAuC,CAAC;IAC9Cb,WAAW,CAAC,CAAC,CAAC,CAAC;EACjB,CAAC;EAED,oBACEH,OAAA;IACEiB,SAAS,EAAC,gBAAgB;IAC1BC,OAAO,EAAEd,SAAS,GAAGW,gBAAgB,GAAGV,aAAc;IAAAc,QAAA,GAErDf,SAAS,GAAG,YAAY,GAAG,SAAS,EAAC,YACxC;EAAA;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAQ,CAAC;AAEb,CAAC;AAACC,EAAA,GA9BIvB,gBAAgB;AAgCtB,eAAeA,gBAAgB;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}