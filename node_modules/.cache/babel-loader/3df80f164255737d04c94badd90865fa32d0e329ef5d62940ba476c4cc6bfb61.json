{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\Desktop\\\\frontend-main\\\\src\\\\components\\\\LinkedInConnect.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LinkedInConnect = ({\n  appUser,\n  onConnected,\n  connected,\n  connectionDetails = null\n}) => {\n  _s();\n  const [isConnecting, setIsConnecting] = useState(false);\n  const [connectionStatus, setConnectionStatus] = useState(null);\n  useEffect(() => {\n    const handleMessage = event => {\n      if (event.data.type === 'linkedin_callback') {\n        setIsConnecting(false);\n        if (event.data.success) {\n          const {\n            posting_method,\n            organization_count,\n            has_org_access,\n            person_urn,\n            org_urn,\n            message\n          } = event.data;\n          setConnectionStatus({\n            success: true,\n            posting_method,\n            organization_count: organization_count || 0,\n            has_org_access: has_org_access || false,\n            person_urn,\n            org_urn,\n            message: message || 'Connected successfully'\n          });\n          let successMessage = `LinkedIn connected successfully!\\n`;\n          successMessage += `Posting Method: ${posting_method}\\n`;\n          if (has_org_access && organization_count > 0) {\n            successMessage += `Organizations Found: ${organization_count}\\n`;\n            successMessage += `Company Pages Detected: Yes\\n`;\n            successMessage += `Primary Org URN: ${org_urn || 'None'}`;\n          } else {\n            successMessage += `Will post to: Personal Profile\\n`;\n            successMessage += `Person URN: ${person_urn}`;\n          }\n          alert(successMessage);\n          onConnected();\n        } else {\n          setConnectionStatus({\n            success: false,\n            error: event.data.error\n          });\n          alert(`LinkedIn connection failed: ${event.data.error}`);\n        }\n      }\n    };\n    window.addEventListener('message', handleMessage);\n    return () => window.removeEventListener('message', handleMessage);\n  }, [onConnected]);\n  const handleConnect = () => {\n    setIsConnecting(true);\n    setConnectionStatus(null);\n    const clientId = '86geycovoa141y';\n    const redirectUri = encodeURIComponent('http://13.233.45.167:5000/social/linkedin/callback');\n    const scopes = ['r_basicprofile', 'w_member_social', 'r_organization_social', 'w_organization_social', 'rw_organization_admin', 'r_organization_followers', 'r_organization_social_feed', 'w_organization_social_feed', 'r_member_profileAnalytics', 'r_member_postAnalytics'].join(' ');\n    const scope = encodeURIComponent(scopes);\n    const state = encodeURIComponent(appUser);\n    const url = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}&state=${state}&scope=${scope}`;\n    console.log('LinkedIn Auth - Requesting scopes:', scopes);\n    const popup = window.open(url, 'linkedin-auth', 'width=600,height=700,scrollbars=yes,resizable=yes');\n    if (!popup) {\n      alert('Popup blocked. Please allow popups for this site and try again.');\n      setIsConnecting(false);\n      return;\n    }\n    const checkClosed = setInterval(() => {\n      if (popup.closed) {\n        clearInterval(checkClosed);\n        setIsConnecting(false);\n        setTimeout(() => {\n          onConnected();\n        }, 1000);\n      }\n    }, 1000);\n  };\n  const handleDisconnect = async () => {\n    if (!window.confirm('Are you sure you want to disconnect LinkedIn?')) {\n      return;\n    }\n    try {\n      setIsConnecting(true);\n      const token = localStorage.getItem('token');\n      if (!token) {\n        alert('Please login again to disconnect LinkedIn.');\n        window.location.href = '/login';\n        return;\n      }\n      console.log('Disconnecting LinkedIn for user:', appUser);\n      const response = await fetch('http://13.233.45.167:5000/social/linkedin/disconnect', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${token}`,\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          app_user: appUser,\n          platform: 'linkedin' // Added platform identifier\n        })\n      });\n      const result = await response.json();\n      console.log('Disconnect response:', result);\n      if (response.status === 401) {\n        if (result.token_expired) {\n          localStorage.removeItem('token');\n          alert('Your session has expired. Please login again.');\n          window.location.href = '/login';\n          return;\n        }\n      }\n      if (response.ok && result.success) {\n        setConnectionStatus(null);\n        alert('LinkedIn disconnected successfully!');\n        onConnected(); // Refresh connection status\n      } else {\n        const errorMessage = result.error || result.message || 'Unknown error occurred';\n        console.error('Disconnect failed:', errorMessage);\n        alert(`Failed to disconnect LinkedIn: ${errorMessage}`);\n      }\n    } catch (error) {\n      console.error('Error disconnecting LinkedIn:', error);\n      alert(`Error disconnecting LinkedIn: ${error.message}`);\n    } finally {\n      setIsConnecting(false);\n    }\n  };\n  const getConnectionInfo = () => {\n    if (!connected || !connectionDetails) return null;\n    const {\n      detail\n    } = connectionDetails;\n    if (!detail) return null;\n    const {\n      posting_method,\n      has_org_access,\n      organization_count = 0,\n      user_urn,\n      org_urn\n    } = detail;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '8px',\n        fontSize: '12px',\n        color: '#666'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Method:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 14\n        }, this), \" \", posting_method || 'Personal Profile']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 9\n      }, this), has_org_access && organization_count > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Organizations:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 18\n          }, this), \" \", organization_count]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Primary Org URN:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 18\n          }, this), \" \", org_urn || 'N/A']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Person URN:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 16\n        }, this), \" \", user_urn || 'Personal Profile']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connected ? handleDisconnect : handleConnect,\n      disabled: isConnecting,\n      style: {\n        color: 'white',\n        border: 'none',\n        padding: '10px 16px',\n        borderRadius: '6px',\n        cursor: isConnecting ? 'not-allowed' : 'pointer',\n        fontSize: '14px',\n        fontWeight: '500',\n        backgroundColor: connected ? '#dc3545' : '#0077b5',\n        opacity: isConnecting ? 0.7 : 1\n      },\n      children: isConnecting ? connected ? 'Disconnecting...' : 'Connecting...' : connected ? 'Disconnect LinkedIn' : 'Connect LinkedIn'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), getConnectionInfo(), connectionStatus && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '8px',\n        padding: '8px',\n        borderRadius: '4px',\n        fontSize: '12px',\n        backgroundColor: connectionStatus.success ? '#d4edda' : '#f8d7da',\n        color: connectionStatus.success ? '#155724' : '#721c24'\n      },\n      children: connectionStatus.success ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Connected!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 42\n        }, this), connectionStatus.has_org_access && connectionStatus.organization_count > 0 ? `Org Pages: ${connectionStatus.organization_count} detected` : 'Personal Profile Only']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Failed:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 18\n        }, this), \" \", connectionStatus.error]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(LinkedInConnect, \"rzhSJsZz5X/uC3tiEPI8qfbt0dQ=\");\n_c = LinkedInConnect;\nexport default LinkedInConnect;\nvar _c;\n$RefreshReg$(_c, \"LinkedInConnect\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","LinkedInConnect","appUser","onConnected","connected","connectionDetails","_s","isConnecting","setIsConnecting","connectionStatus","setConnectionStatus","handleMessage","event","data","type","success","posting_method","organization_count","has_org_access","person_urn","org_urn","message","successMessage","alert","error","window","addEventListener","removeEventListener","handleConnect","clientId","redirectUri","encodeURIComponent","scopes","join","scope","state","url","console","log","popup","open","checkClosed","setInterval","closed","clearInterval","setTimeout","handleDisconnect","confirm","token","localStorage","getItem","location","href","response","fetch","method","headers","body","JSON","stringify","app_user","platform","result","json","status","token_expired","removeItem","ok","errorMessage","getConnectionInfo","detail","user_urn","style","marginTop","fontSize","color","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","border","padding","borderRadius","cursor","fontWeight","backgroundColor","opacity","_c","$RefreshReg$"],"sources":["C:/Users/Lenovo/Desktop/frontend-main/src/components/LinkedInConnect.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\n\r\nconst LinkedInConnect = ({ appUser, onConnected, connected, connectionDetails = null }) => {\r\n  const [isConnecting, setIsConnecting] = useState(false);\r\n  const [connectionStatus, setConnectionStatus] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const handleMessage = (event) => {\r\n      if (event.data.type === 'linkedin_callback') {\r\n        setIsConnecting(false);\r\n        \r\n        if (event.data.success) {\r\n          const { \r\n            posting_method, \r\n            organization_count, \r\n            has_org_access, \r\n            person_urn, \r\n            org_urn, \r\n            message \r\n          } = event.data;\r\n          \r\n          setConnectionStatus({\r\n            success: true,\r\n            posting_method,\r\n            organization_count: organization_count || 0,\r\n            has_org_access: has_org_access || false,\r\n            person_urn,\r\n            org_urn,\r\n            message: message || 'Connected successfully'\r\n          });\r\n\r\n          let successMessage = `LinkedIn connected successfully!\\n`;\r\n          successMessage += `Posting Method: ${posting_method}\\n`;\r\n          \r\n          if (has_org_access && organization_count > 0) {\r\n            successMessage += `Organizations Found: ${organization_count}\\n`;\r\n            successMessage += `Company Pages Detected: Yes\\n`;\r\n            successMessage += `Primary Org URN: ${org_urn || 'None'}`;\r\n          } else {\r\n            successMessage += `Will post to: Personal Profile\\n`;\r\n            successMessage += `Person URN: ${person_urn}`;\r\n          }\r\n          \r\n          alert(successMessage);\r\n          onConnected();\r\n          \r\n        } else {\r\n          setConnectionStatus({\r\n            success: false,\r\n            error: event.data.error\r\n          });\r\n          alert(`LinkedIn connection failed: ${event.data.error}`);\r\n        }\r\n      }\r\n    };\r\n\r\n    window.addEventListener('message', handleMessage);\r\n    return () => window.removeEventListener('message', handleMessage);\r\n  }, [onConnected]);\r\n\r\n  const handleConnect = () => {\r\n    setIsConnecting(true);\r\n    setConnectionStatus(null);\r\n    \r\n    const clientId = '86geycovoa141y';\r\n    const redirectUri = encodeURIComponent('http://13.233.45.167:5000/social/linkedin/callback');\r\n    \r\n    const scopes = [\r\n      'r_basicprofile',\r\n      'w_member_social',\r\n      'r_organization_social',\r\n      'w_organization_social',\r\n      'rw_organization_admin',\r\n      'r_organization_followers',\r\n      'r_organization_social_feed',\r\n      'w_organization_social_feed',\r\n      'r_member_profileAnalytics',\r\n      'r_member_postAnalytics'\r\n    ].join(' ');\r\n    \r\n    const scope = encodeURIComponent(scopes);\r\n    const state = encodeURIComponent(appUser);\r\n    \r\n    const url = `https://www.linkedin.com/oauth/v2/authorization?response_type=code&client_id=${clientId}&redirect_uri=${redirectUri}&state=${state}&scope=${scope}`;\r\n    \r\n    console.log('LinkedIn Auth - Requesting scopes:', scopes);\r\n    \r\n    const popup = window.open(url, 'linkedin-auth', 'width=600,height=700,scrollbars=yes,resizable=yes');\r\n    \r\n    if (!popup) {\r\n      alert('Popup blocked. Please allow popups for this site and try again.');\r\n      setIsConnecting(false);\r\n      return;\r\n    }\r\n    \r\n    const checkClosed = setInterval(() => {\r\n      if (popup.closed) {\r\n        clearInterval(checkClosed);\r\n        setIsConnecting(false);\r\n        setTimeout(() => {\r\n          onConnected();\r\n        }, 1000);\r\n      }\r\n    }, 1000);\r\n  };\r\n\r\n  const handleDisconnect = async () => {\r\n    if (!window.confirm('Are you sure you want to disconnect LinkedIn?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      setIsConnecting(true);\r\n      const token = localStorage.getItem('token');\r\n      \r\n      if (!token) {\r\n        alert('Please login again to disconnect LinkedIn.');\r\n        window.location.href = '/login';\r\n        return;\r\n      }\r\n\r\n      console.log('Disconnecting LinkedIn for user:', appUser);\r\n\r\n      const response = await fetch('http://13.233.45.167:5000/social/linkedin/disconnect', {\r\n        method: 'POST',\r\n        headers: { \r\n          'Authorization': `Bearer ${token}`,\r\n          'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({ \r\n          app_user: appUser,\r\n          platform: 'linkedin'  // Added platform identifier\r\n        })\r\n      });\r\n      \r\n      const result = await response.json();\r\n      console.log('Disconnect response:', result);\r\n      \r\n      if (response.status === 401) {\r\n        if (result.token_expired) {\r\n          localStorage.removeItem('token');\r\n          alert('Your session has expired. Please login again.');\r\n          window.location.href = '/login';\r\n          return;\r\n        }\r\n      }\r\n      \r\n      if (response.ok && result.success) {\r\n        setConnectionStatus(null);\r\n        alert('LinkedIn disconnected successfully!');\r\n        onConnected(); // Refresh connection status\r\n      } else {\r\n        const errorMessage = result.error || result.message || 'Unknown error occurred';\r\n        console.error('Disconnect failed:', errorMessage);\r\n        alert(`Failed to disconnect LinkedIn: ${errorMessage}`);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error disconnecting LinkedIn:', error);\r\n      alert(`Error disconnecting LinkedIn: ${error.message}`);\r\n    } finally {\r\n      setIsConnecting(false);\r\n    }\r\n  };\r\n\r\n  const getConnectionInfo = () => {\r\n    if (!connected || !connectionDetails) return null;\r\n\r\n    const { detail } = connectionDetails;\r\n    if (!detail) return null;\r\n\r\n    const { posting_method, has_org_access, organization_count = 0, user_urn, org_urn } = detail;\r\n    \r\n    return (\r\n      <div style={{ marginTop: '8px', fontSize: '12px', color: '#666' }}>\r\n        <div><strong>Method:</strong> {posting_method || 'Personal Profile'}</div>\r\n        {has_org_access && organization_count > 0 ? (\r\n          <>\r\n            <div><strong>Organizations:</strong> {organization_count}</div>\r\n            <div><strong>Primary Org URN:</strong> {org_urn || 'N/A'}</div>\r\n          </>\r\n        ) : (\r\n          <div><strong>Person URN:</strong> {user_urn || 'Personal Profile'}</div>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <button \r\n        onClick={connected ? handleDisconnect : handleConnect}\r\n        disabled={isConnecting}\r\n        style={{\r\n          color: 'white',\r\n          border: 'none',\r\n          padding: '10px 16px',\r\n          borderRadius: '6px',\r\n          cursor: isConnecting ? 'not-allowed' : 'pointer',\r\n          fontSize: '14px',\r\n          fontWeight: '500',\r\n          backgroundColor: connected ? '#dc3545' : '#0077b5',\r\n          opacity: isConnecting ? 0.7 : 1\r\n        }}\r\n      >\r\n        {isConnecting ? (connected ? 'Disconnecting...' : 'Connecting...') : (connected ? 'Disconnect LinkedIn' : 'Connect LinkedIn')}\r\n      </button>\r\n      \r\n      {getConnectionInfo()}\r\n      \r\n      {connectionStatus && (\r\n        <div style={{ \r\n          marginTop: '8px', \r\n          padding: '8px', \r\n          borderRadius: '4px',\r\n          fontSize: '12px',\r\n          backgroundColor: connectionStatus.success ? '#d4edda' : '#f8d7da',\r\n          color: connectionStatus.success ? '#155724' : '#721c24'\r\n        }}>\r\n          {connectionStatus.success ? (\r\n            <div>\r\n              <strong>Connected!</strong><br/>\r\n              {connectionStatus.has_org_access && connectionStatus.organization_count > 0 ? \r\n                `Org Pages: ${connectionStatus.organization_count} detected` : \r\n                'Personal Profile Only'\r\n              }\r\n            </div>\r\n          ) : (\r\n            <div><strong>Failed:</strong> {connectionStatus.error}</div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LinkedInConnect;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}